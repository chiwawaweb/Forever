<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPv39wAAAAAA////Avr3+BD27u4c+PLyNPr19Uv59PVI9/DxLfXs
        7Bn79fYNAAAAAAAAAAD79/cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD18vEAAAAAAAAA
        AAD9+/o29u3tkfTr7ND37Ov/+evo//fj3//34+D/+evo//fr6vb06uvE9OrrfP78/SAAAAAA1aenAPv5
        +QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/P//A/bv8KXy5eXz9Ofm//DPxf+7prX/fYa7/2OA
        x/9jgMf/foa6/7ymtf/wz8b/9Obm//Hl5fD27u57AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8+vsAAAA
        AADz7e0W8+npxfHh4f/j0db/k5G3/yBv3f8AbvH/BYLz/wWK8/8FivP/BYLz/wBt8v8hb93/lZK3/+PR
        1f/x4eH/8+npovbw8AsAAAAA9OnqAAAAAAD28PEAAAAAAPb19g/x5ufM9uLf/8C0x/8/d9H/BoDy/wuX
        9P8Lqfb/B6v3/wWu+P8Grfj/CKr3/wyo9v8Ll/T/BoDy/0B30f+/tMj/9uLf//Ll5qwAAAAAAAAAAAAA
        AAAAAAAAAAAAAPHl5cXx4eD/vLLJ/yN44/8Tk/P/EZz0/w2i9f8IqPb/BK75/wGx+f8BsPn/Baz3/wqn
        9v8OofX/Epz0/xOT8/8hd+P/u7PJ//Lh4P/x5OScAAAAAO/g4QAAAAAA8uXlYO/h4fvezdT/PH7Z/xiR
        8/8WmPP/Ep3z/w2i9v8Iqff/A6/4/wCy+f8Asvn/Ba35/wmn9v8OofX/Epz0/xeX8v8XkfP/OH3a/9vN
        1f/v4OD279/hPwAAAADq19kI7d3esfLf3f+ClMj/EYXz/xWR9P8VlvP/Epzz/w6h9f8Jp/f/Bqz3/wCw
        /P8Cr/n/Bqr3/wqm9v8OoPT/E5vz/wuV9/8OkPb/Eobz/3mTzP/z4N3/7d3eounW1wXr2doY7dzd/+jI
        xf8Ve+7/Govz/2WXz/8nkeX/EJn1/w+e9P8Lo/X/AKj8/3Okxv8ApfX/CKb3/wyi9f8QnvT/CZf3/5an
        xf+irMf/FIr1/xN77v/hx8n/7tzd8evY2Rbn0NJV8tzZ/5Cfzv8ghfH/GYfx/4Sp2P/98e7/V6Xj/xSb
        8v8On/T/AJ75/87R2//c3OP/MaTp/w6d9P8TmvP/CJL1/8DM4P/R2Oj/EIXy/yCG8f+HndH/8tvZ/+fR
        0j/lzM6N8dXR/2SU3v8jg+//G4Xx/4ar2////////vj2/5zF6f8lmur/AJb4/8zR3v//////7+7x/325
        5/8Ske7/B471/8HO4//S2en/EoPx/yOE7/9Sj+P/9NfR/+XNzoHjycqy8NDM/1eQ5P8kge7/HILw/4mu
        3//////////////+/f/h6fP/PaDq/9DV4/////////////38/P/M2uv/JY/s/8TS5//U3O3/FH/x/yaD
        7v86h+r/8NHM/+PJy5rgxMS6787H/1KO5v8nf+7/Hn/v/42y5P/////////////////6+fz/j73r/9rb
        5v/////////////////x9Pr/cavo/8nV6f/V3u//Fnzv/yeA7v86hev/68zI/+DExZ/cvL2g6sjD/2KU
        4v8nfe7/IHzu/5Gz6P///////////9vm9f9UnOn/AGns/9Pa6//////////+/7jT8v85juj/AHjw/8jY
        7v/Y4fP/F3nu/yh/7v9Bhun/7crD/9y8vZTXtLV54b26/5Gp3f8keu7/H3rt/4y88P//////qtL1/xiL
        7v8Af+//AHfu/9jl9f//////frvy/wuE7v8AgO//AHju/8ng9//a5/n/Fnbt/yZ77v9wmuH/4766/9e0
        tWDTrrAv1K2t/9HDz/8ieO7/C3/u/3rD+P+Exvj/AITv/wCL8P8Ai/D/AILv/8zo/f9CqPT/AIXw/wCL
        8P8Ai/D/AIPv/7nf/P/E5Pz/B3vu/yJ57v+ytNL/166t/9SvsCPOpaYRzaSk2/Xd1/9imen/HHzu/w6V
        8v8Ai/H/AJHy/wCR8v8AkfH/AJHy/wiT8v8AjvH/AJHy/wCR8v8AkfL/AJHx/xCX8v8Sl/L/Hn3u/0SJ
        6//z3Nf/zaSkyc6lpg0AAAAA3sLCg/fv8P/b3Ov/Ln3s/xaH8P8Al/P/AJXz/wCV8/8AlfP/AJXz/wCV
        8/8AlfP/AJXz/wCV8/8AlfP/AJXz/wCW8/8Wh/D/I3ft/8vT6//48PH+4MXGcgAAAAAAAAAAtHd2HezZ
        2uX37ez/mrnr/y177f8Tj/L/AKH1/wCi9v8AovX/AKL1/wCi9f8AovX/AKL1/wCi9f8Aovb/AKH1/xOP
        8f8qeu3/ha7r//Tr7P/t3NzbgyMiCgAAAADMoqIAAAAAAMqdnUzo09P/9ujo/5K47v8lee3/Gonw/wyh
        9v8Asvr/ALT6/wCz+v8As/r/ALT6/wCx+v8Mofb/G4rw/yB27f+Bru7/7+Tn/+rW1/bLn58uAAAAAMyi
        ogAAAAAA////AAAAAADOpqVT5MvM/+3c3v/L1u3/QIvw/yB67f8kgu//HZDx/xab9P8Wm/T/HY/x/ySC
        7/8he+3/NITw/7zN7P/r293/5s/P+NazszQAAAAA2La2AAAAAAAAAAAAAAAAAMGPjgAAAAAAxpeXV+LI
        yeno0dH/8+Th/6fE8f9Qke3/OYTt/zqE7v86hO3/OoTt/0eM7f+avO//7d/h/+rS0v/kysveyZydNAAA
        AAC8iIYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALd8eyjWtLSU3L2+7OnLyv/03Nf/5Nbc/9TP
        3v/Tzt3/4NPc//Xb1v/pzMr/4MHC2du7vHupZ2gQAAAAANaytAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAxpeXAAAAAACUQUIC0KmpE8qdnk3Tra6S17Ozxtq4udTauLnT2LW2u9WwsYnNpKU1066vEAAA
        AAAAAAAAyp+gAAAAAAAAAAAAAAAAAAAAAAD+AP8A/AA/APAAHwDgAAcAwAAHAMAAAwCAAAEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAQCAAAEAwAADAOAABwDwAA8A+AAfAPwA
        fwA=
</value>
  </data>
</root>